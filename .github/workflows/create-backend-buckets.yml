name: Create S3 Buckets for State Files

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Specify the environment to destroy (dev, sit, prod)'
        required: true
        default: 'dev'

jobs:
  create-backend-buckets:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}  # Dynamically use the input environment
      url: ${{ steps.deploy.outputs.url }}

    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read   # Access to repository contents

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}  # Use the AWS region from secrets
      # Dynamically select AWS_ROLE_ARN based on environment input
      AWS_ROLE_ARN: ${{ 
        github.event.inputs.environment == 'prod' && secrets.AWS_PROD_ROLE_ARN ||
        github.event.inputs.environment == 'sit' && secrets.AWS_SIT_ROLE_ARN ||
        secrets.AWS_DEV_ROLE_ARN }} # Default to dev if no match

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout the code

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8  # Set the Terraform version

      - name: Configure AWS credentials
        id: aws_auth
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}  # Assume the appropriate role dynamically
          aws-region: ${{ env.AWS_REGION }}  # Use the AWS region from the environment
        env:
          AWS_ROLE_ARN: ${{ env.AWS_ROLE_ARN }}  # Use the environment variable for the role ARN
          AWS_REGION: ${{ env.AWS_REGION }}  # Use the environment variable for the AWS region
          TF_VAR_TF_STATE_BUCKET: ${{ env.TF_VAR_TF_STATE_BUCKET }}  # Use the environment variable for the state bucket

      - name: Initialize Terraform for S3 bucket
        working-directory: terraform/backend_setup
        run: terraform init

      - name: Plan S3 bucket creation for ${{ github.event.inputs.environment }}
        working-directory: terraform/backend_setup
        run: TF_LOG=DEBUG terraform plan -var="environment=${{ github.event.inputs.environment }}" -var="region=${{ secrets.AWS_REGION }}" -out="${{ matrix.environment }}-backend.tfplan"

      - name: Apply S3 bucket creation for ${{github.event.inputs.environment }}
        if: github.event_name == 'workflow_dispatch'
        working-directory: terraform/backend_setup
        run: terraform apply "${{ github.event.inputs.environment }}-backend.tfplan"
